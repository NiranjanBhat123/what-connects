services:
  db:
    image: postgres:16-alpine
    container_name: whatconnects_db
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-whatconnects}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: whatconnects_redis
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: .
      dockerfile: docker/backend/Dockerfile
      target: development
    container_name: whatconnects_backend
    command: >
      sh -c "python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    volumes:
      - ./backend:/app
    ports:
      - "8000:8000"
    environment:
      - DEBUG=True
      - DJANGO_SETTINGS_MODULE=config.settings.development
      - DATABASE_URL=postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-8484}@db:5432/${POSTGRES_DB:-whatconnects}
      - REDIS_URL=redis://redis:6379/0
      - GEMINI_API_KEY=AIzaSyDBfg52jJcawb1EMbU1YwJ10VzgFStxA6g
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    stdin_open: true
    tty: true

  channels:
    build:
      context: .
      dockerfile: docker/backend/Dockerfile
      target: development
    container_name: whatconnects_channels
    command: >
      sh -c "daphne -b 0.0.0.0 -p 8001 config.asgi:application"
    volumes:
      - ./backend:/app
    ports:
      - "8001:8001"
    environment:
      - DEBUG=True
      - DJANGO_SETTINGS_MODULE=config.settings.development
      - DATABASE_URL=postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@db:5432/${POSTGRES_DB:-whatconnects}
      - REDIS_URL=redis://redis:6379/0
      - GEMINI_API_KEY=${GEMINI_API_KEY}
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

volumes:
  postgres_data:
  redis_data: